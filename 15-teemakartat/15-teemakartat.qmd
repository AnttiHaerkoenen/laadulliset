---
title: 'Teemakartat'
subtitle: '5111228 Laadullisten aineistojen menetelmät historiatieteessä'
author: 'Antti Härkönen'
institute: 'antti.harkonen@uef.fi'
date: 2024-10-21
echo: false
warning: false
execute:
    enabled: true
format:
    revealjs:
        embed-resources: true
        theme: simple
        lang: fi
        incremental: true
        navigation-mode: vertical
        transition: convex
        logo: UEF_logo.jpg
---

# Teemakartat-moduuli

## Rakenne

- luento-osio
- 3 demoa kädestä pitäen
- 3 harjoitusta itsenäisesti

## Oppimistavoitteet

- yksinkertaisen teemakartan luominen
- yksinkertaisen paikkatiedon tuottaminen historiallisista aineistoista
- paikkatiedon hankkiminen internetistä

# Kartografia

## Historiaa

- karttojen piirtäminen on vanhin tapa esittää paikkatietoa
- perinteisiä ongelmia: kuinka esittää maapallo kaksiulotteisella paperilla, mitä informaatiota sisällyttää
- yhä käytännönläheisempää renessanssista alkaen
- geoidit, projektiot ja koordinaattijärjestelmät

## Moderni kartografia

- geoinformatiikan ansiosta kartat voidaan vapauttaa paperin staattisuudesta
- interaktiiviset ja päivittyvät kartat, myös kartta-animaatiot
- kaukokartoitus mahdollistaa nopeat pikakartoitukset

## Datavisualisointi

- kattokäsite, johon myös kartografia kuuluu
- tilastolliset kaaviot ja muut esitykset
- esteettinen näkökulma

## Funktio

- mitä varten visualisointi tehdään?
- mitkä kohteet ovat tarpeeksi tärkeitä?
- turha informaatio pois

## Abstraktiotaso

- mitkä kohteet ovat tarpeeksi suuria?
- äärimmäisen tärkeä asia visualisoinnissa, etenkin kartoissa
- turha informaatio pois

# Karttojen tulkinta

## Kartan luonne

- kaikki kartat ja muut visualisoinnit ovat valetta
- sekä nykyiset että historialliset kartat on tehty palvelemaan tiettyä tarkoitusta
- lähdekritiikki on äärimmäisen tärkeää

## MAUP

- muunnettavien alueyksiköiden ongelma
- aluerajaus vaikuttaa tilastointiin, samoin käytettyjen alueiden koko!
- USAn vaalipiirien [gerrymanderointi](https://fi.wikipedia.org/wiki/Gerrymanderointi) on tästä erityisen härski esimerkki

##

```{python}
#| label: MAUP
#| fig-cap: "Esimerkki MAUPista"

import numpy as np
import matplotlib.pyplot as plt
import geopandas as gpd
from shapely import Polygon

fig, axs = plt.subplots(1, 3, layout='constrained')

rng = np.random.default_rng()
x = rng.uniform(size=1_000)
y = rng.beta(2, 1, size=1_000)

points = gpd.GeoSeries.from_xy(x,y)
areas_1 = gpd.GeoDataFrame(geometry=[Polygon(((0,1),(1,1),(1,0),(0,0)))])
areas_2 = gpd.GeoDataFrame(geometry=[
    Polygon(((0,1),(0.33,1),(0.33,0),(0,0))),
    Polygon(((0.33,1),(0.67,1),(0.67,0),(0.33,0))),
    Polygon(((0.67,1),(1,1),(1,0),(0.67,0))),
])
areas_3 = gpd.GeoDataFrame(geometry=[
    Polygon(((0,1),(1,1),(1,0.67),(0,0.67))),
    Polygon(((0,0.67),(1,0.67),(1,0.33),(0,0.33))),
    Polygon(((0,0.33),(1,0.33),(1,0),(0,0))),
])

for area in [areas_1, areas_2, areas_3]:
    count = []
    for i in range(area.geometry.shape[0]):
        count.append(points.within(area.geometry[i]).sum())
    area['count'] = count
    area['density'] = area['count'] / area.area

classifier = {'bins': np.linspace(10, 2000, 200), 'lowest': 0}
areas_1.plot(
    ax=axs[0],
    edgecolor='black',
    zorder=1,
    column='density',
    cmap='OrRd',
    scheme='userdefined',
    classification_kwds=classifier,
)
areas_2.plot(
    ax=axs[1],
    edgecolor='black',
    zorder=1,
    column='density',
    cmap='OrRd',
    scheme='userdefined',
    classification_kwds=classifier,
)
areas_3.plot(
    ax=axs[2],
    edgecolor='black',
    zorder=1,
    column='density',
    cmap='OrRd',
    scheme='userdefined',
    classification_kwds=classifier,
)

for i in range(3):
    points.plot(
        ax=axs[i],
        zorder=2,
        color='black',
        alpha=0.5,
        markersize=5,
    )
    axs[i].set_axis_off()
fig.show()

```

##

```{python}
#| label: MAUP_segregation
#| fig-cap: "MAUPin vaikutus segregaatioon"

import numpy as np
import matplotlib.pyplot as plt
import geopandas as gpd
from shapely import Polygon
from segregation.singlegroup import Dissim

fig, axs = plt.subplots(1, 3, layout='constrained')

rng = np.random.default_rng()
x1 = rng.uniform(size=1_000)
y1 = rng.beta(2, 1, size=1_000)
x2 = rng.uniform(size=1_000)
y2 = rng.uniform(size=1_000)

points_1 = gpd.GeoSeries.from_xy(x1, y1)
points_2 = gpd.GeoSeries.from_xy(x2, y2)

D = []
for area in [areas_1, areas_2, areas_3]:
    count_1 = []
    count_2 = []
    for i in range(area.geometry.shape[0]):
        count_1.append(points_1.within(area.geometry[i]).sum())
        count_2.append(points_2.within(area.geometry[i]).sum())
    area['count_1'] = count_1
    area['count_2'] = count_2
    area['total'] = area['count_1'] + area['count_2']
    D.append(Dissim(area, 'count_1', 'total').statistic)

areas_1.plot(
    ax=axs[0],
    edgecolor='black',
    zorder=1,
    color='white',
)
areas_2.plot(
    ax=axs[1],
    edgecolor='black',
    zorder=1,
    color='white',
)
areas_3.plot(
    ax=axs[2],
    edgecolor='black',
    zorder=1,
    color='white',
)

for i in range(3):
    points_1.plot(
        ax=axs[i],
        zorder=2,
        color='blue',
        alpha=0.5,
        markersize=5,
    )
    points_2.plot(
        ax=axs[i],
        zorder=3,
        color='green',
        alpha=0.5,
        markersize=5,
    )
    axs[i].set_title(f'D={D[i]:.3f}')
    axs[i].set_axis_off()
fig.show()

```

## 

{{< video https://youtu.be/cwBslntC3xg?si=koqxTgKWd5FtI2yg width="100%" height="85%" >}}

## Syy-yhteydet

- ekologinen harha
- pelkästään kahden teemakartan vertaamisella ei voi todeta kausaalisia suhteita!
- esimerkki: Pähkinäsaaren rauhan raja ___ei___ vaikuta suomalaisten terveyteen

# Teemakartat

##

![Teemakarttojen visuaaliset muuttujat ja tiedon mitta-asteikot](../img/teemakartat.png)

<p style="font-size: small">Helsingin yliopisto. Kvalitatiiviset ja kvantitatiiviset esitystavat</p>

## Koropleettikartat

- todennäköisesti yleisin tilastoteemakarttatyyppi 
- sanomalehdissä viikoittain
- värillä kuvataan tilastointialueen muuttujan arvoa

## {background-iframe="https://anttihaerkoenen.github.io/muuttovoitto.html" background-interactive="true" width="100%" height="100%"}

# Geoinformatiikka

## GIS

- Geographic Information Systems
- yleensä myös kuvaa nykyistä spatiaalista tiedettä laajemmin

## Paikkatieto

- sijaintitieto
- ominaisuustieto
- data yleensä SQL-tietokannoissa
- paikkatietokanta on spatiaalisen tieteen ydin
- perinteinen kartta on vain yksi tapa visualisoida paikkatietoa

## Vektori- ja rasteridata

- kaksi paikkatiedon päätyyppiä
- rasteridata vie paljon enemmän muistia
- vektoridataa on helpompi käyttää
- vektoridata on helppo muuttaa rasteriksi, mutta rasterin muuttaminen vektoriksi vaatii joko käsityötä tai tekoälyä

## Rasteri

- pikseleistä koostuva kuvatiedosto
- skannattu kartta, satelliittikuva, ilmakuva
- formaatit: geotiff, tavalliset kuvaformaatit

## Vektori

- yksinkertainen formaatti
- piste, viiva, monikulmio, tai näiden yhdistelmä
- vektoreiden välisten spatiaalisten suhteiden määrittäminen on helppoa
- formaatit: Geopackage, ESRI shapefile, geojson

# QGIS

## Taustaa

- vapaa ja avoin työpöytäsovellus
- käytössä tutkimuksessa, yrityksissä, kansalaisjärjestöissä, julkishallinnossa ympäri maailmaa
- avoin lähdekoodi on tärkeää tieteen ja päätöksenteon läpinäkyvyyden kannalta!
- QField mobiililaitteisiin

## Työkalut

- työkaluja on niin paljon, ettei kaikkia voi esittää samaan aikaan käyttöliittymässä
- paljon työkaluja saatavilla lisäosina

## Georeferointi

- paikkatiedon yhdistäminen oikeaan sijaintitietoon
- vanhojen karttojen ja asemakaavojen georeferointi vaatii oikaisupisteita (_Ground Control Point, gcp_)
- vaatii pisteitä, jotka sijainti tiedetään muun paikkatiedon, kuten vertailukartan, avulla

## Vektorointi

- rasterimuotoisen datan (vanha kartta tai ilmakuva) muuttaminen vektorimuotoon
- tapahtuu käytännössä luomalla joukko uusia vektoritasoja, ja piirtämällä ne kartan päälle

# Lopuksi

- visualisointi on tärkeää!
- älä usko karttoja
